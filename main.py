#!/usr/bin/env python3
"""
Telegram Userbot - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç—á–∏–∫ –¥–ª—è –∞—Ä—Ö–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ Telegram
"""

import asyncio
import sys
import os
import random

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8 –¥–ª—è Windows –∫–æ–Ω—Å–æ–ª–∏
if sys.platform == "win32":
    os.system("chcp 65001 >nul 2>&1")
    sys.stdout.reconfigure(encoding='utf-8')
    sys.stderr.reconfigure(encoding='utf-8')

from bot.browser import UndetectedBrowserManager
from bot.telegram import UndetectedTelegramHandler
from utils.logger import get_logger, setup_logger
from config import APP_CONFIG, TELEGRAM_SITE_CONFIG
from selenium.webdriver.common.by import By

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
logger = setup_logger("main")
logger.info("Telegram Userbot - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∂–µ–Ω")


class TelegramArchiveBot:
    """–ë–æ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –≤ –∞—Ä—Ö–∏–≤–Ω—ã—Ö —á–∞—Ç–∞—Ö Telegram"""
    
    def __init__(self):
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
        self.browser_manager = UndetectedBrowserManager()
        self.site_handler = None
        self.is_running = False
        self.ai_model = None
        
        logger.info("–ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram")
    
    async def check_telegram_auth(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Telegram –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å"""
        try:
            logger.info("üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Telegram...")
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram
            await self.browser_manager.navigate_to_site(TELEGRAM_SITE_CONFIG["url"])
            await asyncio.sleep(3)  # –î–∞–µ–º –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            driver = self.browser_manager.driver
            auth_indicators = [
                ".sidebar",  # –°–∞–π–¥–±–∞—Ä –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                ".chatlist",  # –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
                "main",  # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            ]
            
            is_authorized = False
            for selector in auth_indicators:
                try:
                    element = driver.find_element(By.CSS_SELECTOR, selector)
                    if element and element.is_displayed():
                        is_authorized = True
                        break
                except:
                    continue
            
            # –ï—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –∏ –∂–¥–µ–º
            if not is_authorized:
                logger.info("‚ö†Ô∏è Telegram –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
                logger.info("üåê –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –±—Ä–∞—É–∑–µ—Ä–µ")
                
                # –ñ–¥–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã)
                max_wait_time = APP_CONFIG["auth_wait_timeout"]  # 5 –º–∏–Ω—É—Ç
                waited = 0
                
                while waited < max_wait_time:
                    await asyncio.sleep(2)
                    waited += 2
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
                    for selector in auth_indicators:
                        try:
                            element = driver.find_element(By.CSS_SELECTOR, selector)
                            if element and element.is_displayed():
                                is_authorized = True
                                break
                        except:
                            continue
                    
                    if is_authorized:
                        break
                    
                    if waited % 10 == 0:  # –ö–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
                        logger.info(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏... ({waited}/{max_wait_time} —Å–µ–∫)")
            
            if is_authorized:
                logger.info("‚úÖ Telegram –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")
                
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª–∏
                print("\n" + "="*60)
                print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Telegram –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!")
                print("="*60)
                
                while True:
                    response = input("\n–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏? (y/n): ").strip().lower()
                    if response == 'y':
                        logger.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é")
                        return True
                    elif response == 'n':
                        logger.warning("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é")
                        return False
                    else:
                        print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 'y' –∏–ª–∏ 'n'")
            else:
                logger.error("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏")
                return False
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
            return False
    
    async def start(self) -> None:
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        try:
            logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ {APP_CONFIG['name']} v{APP_CONFIG['version']} –¥–ª—è Telegram...")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
            logger.info("üåê –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...")
            await self.browser_manager.start()
            logger.info("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ Telegram
            auth_result = await self.check_telegram_auth()
            if not auth_result:
                logger.error("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É.")
                await self.browser_manager.close()
                return
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Telegram
            logger.info("üì± –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ Telegram...")
            await self.browser_manager.navigate_to_site(TELEGRAM_SITE_CONFIG["url"])
            logger.info("‚úÖ Telegram –∑–∞–≥—Ä—É–∂–µ–Ω")
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Telegram
            logger.info("üîß –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è Telegram...")
            self.site_handler = UndetectedTelegramHandler(self.browser_manager.driver, TELEGRAM_SITE_CONFIG)
            logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω")
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º AI –º–æ–¥–µ–ª—å
            await self.load_ai_model()
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–ø—É—Å–∫–∞
            self.is_running = True
            logger.info("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
            raise
    
    async def load_ai_model(self) -> None:
        """–ó–∞–≥—Ä—É–∑–∫–∞ AI –º–æ–¥–µ–ª–∏"""
        try:
            logger.info("ü§ñ –ó–∞–≥—Ä—É–∑–∫–∞ AI –º–æ–¥–µ–ª–∏...")
            
            from chat.ai import AIModel
            
            self.ai_model = AIModel()
            
            if self.ai_model.load_model():
                logger.info("‚úÖ AI –º–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            else:
                logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å AI –º–æ–¥–µ–ª—å")
                raise Exception("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ AI –º–æ–¥–µ–ª–∏")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ AI –º–æ–¥–µ–ª–∏: {e}")
            raise
    
    async def stop(self) -> None:
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        try:
            logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
            self.is_running = False
            
            if self.browser_manager:
                await self.browser_manager.close()
            
            logger.info("‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞: {e}")
    
    async def auto_reply_loop(self) -> None:
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤"""
        if not self.is_running:
            logger.warning("‚ö†Ô∏è –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            return

        logger.info("üîÑ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–æ–≤...")
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤ –û–î–ò–ù –†–ê–ó –≤ –Ω–∞—á–∞–ª–µ
        logger.info("üìÅ –û—Ç–∫—Ä—ã—Ç–∏–µ –∞—Ä—Ö–∏–≤–∞ —á–∞—Ç–æ–≤...")
        archive_opened = await self.site_handler.open_archive_folder()
        
        if not archive_opened:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∞—Ä—Ö–∏–≤, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É")
            return
        
        logger.info("‚úÖ –ê—Ä—Ö–∏–≤ –æ—Ç–∫—Ä—ã—Ç, –Ω–∞—á–∏–Ω–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
        
        iteration = 0
        
        while self.is_running:
            try:
                iteration += 1
                logger.info(f"\n{'='*50}")
                logger.info(f"üîÑ –ü–æ–∏—Å–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö #{iteration}")
                logger.info(f"{'='*50}")
                
                # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞—Ä—Ö–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ —Å –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º–∏ (–ë–ï–ó –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è –∞—Ä—Ö–∏–≤–∞)
                unread_chats = await self.site_handler.get_archived_chats_with_unread()
                
                if not unread_chats:
                    logger.info("üì≠ –ù–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∞—Ä—Ö–∏–≤–µ")
                    
                    # –°–ª—É—á–∞–π–Ω–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
                    wait_time = random.randint(10, 30)
                    logger.info(f"‚è≥ –ñ–¥—É {wait_time} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π...")
                    await asyncio.sleep(wait_time)
                    continue
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —á–∞—Ç —Å –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º–∏
                chat = unread_chats[0]
                logger.info(f"\nüì¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Ç–∞: {chat['name']}")
                logger.info(f"   –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {chat['unread_count']}")
                
                # –û—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç
                success = await self.site_handler.select_chat_by_name(chat['name'])
                if not success:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞: {chat['name']}")
                    await self.site_handler.exit_current_chat()
                    continue
                
                logger.info(f"‚úÖ –ß–∞—Ç '{chat['name']}' –æ—Ç–∫—Ä—ã—Ç")
                
                # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (—Ç–æ–ª—å–∫–æ –≤–∏–¥–∏–º—ã–µ)
                logger.info("üìö –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π...")
                messages = await self.site_handler.get_recent_messages(max_messages=30)
                
                if not messages:
                    logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π")
                    await self.site_handler.exit_current_chat()
                    continue
                
                logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
                
                # –ü–æ–ª—É—á–∞–µ–º –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                unread_messages = await self.site_handler.get_unread_messages_in_current_chat()
                
                if not unread_messages:
                    logger.info("‚ÑπÔ∏è –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –≤—Ö–æ–¥—è—â–∏—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    await self.site_handler.exit_current_chat()
                    continue
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è AI
                last_message_text = messages[-1]['text'] if messages else ""
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ AI
                logger.info("ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ AI...")
                response = await self.ai_model.generate_response(messages, last_message_text)
                
                if response is None:
                    logger.info("üö´ AI —Ä–µ—à–∏–ª –Ω–µ –æ—Ç–≤–µ—á–∞—Ç—å (—Ä–∞–∑–≥–æ–≤–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω)")
                    await self.site_handler.exit_current_chat()
                    await asyncio.sleep(random.randint(3, 10))
                    continue
                
                if not response or response.startswith("‚ùå"):
                    logger.warning(f"‚ö†Ô∏è AI –Ω–µ —Å–º–æ–≥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç: {response}")
                    await self.site_handler.exit_current_chat()
                    continue
                
                logger.info(f"üí¨ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response}")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
                logger.info("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞...")
                send_success = await self.site_handler.send_message(response)
                
                if send_success:
                    logger.info(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç '{chat['name']}'")
                else:
                    logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç")
                
                # –í—ã—Ö–æ–¥–∏–º –∏–∑ —á–∞—Ç–∞
                await self.site_handler.exit_current_chat()
                
                # –°–ª—É—á–∞–π–Ω–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —á–∞—Ç–æ–º (–∏–º–∏—Ç–∞—Ü–∏—è —á–µ–ª–æ–≤–µ–∫–∞)
                wait_time = random.randint(3, 15)
                logger.info(f"‚è≥ –ü–∞—É–∑–∞ {wait_time} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —á–∞—Ç–æ–º...")
                await asyncio.sleep(wait_time)
                
            except KeyboardInterrupt:
                logger.info("‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")
                break
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–æ–≤: {e}")
                logger.info("üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞—é —Ä–∞–±–æ—Ç—É —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥...")
                
                # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
                try:
                    await self.site_handler.exit_current_chat()
                except:
                    pass
                
                await asyncio.sleep(30)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏...")
    
    bot = TelegramArchiveBot()
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await bot.start()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–æ–≤
        await bot.auto_reply_loop()
        
    except KeyboardInterrupt:
        logger.info("‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è (Ctrl+C)")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
        await bot.stop()


if __name__ == "__main__":
    logger.info("üé¨ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞...")
    asyncio.run(main())

